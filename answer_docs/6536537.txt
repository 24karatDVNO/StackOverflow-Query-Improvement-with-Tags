<p>I believe the approach you suggested would work nice. Having a <code>petType</code> could also allow you to define subtypes of <code>Pet</code>s (i.e. "mammals", "birds", "reptiles", "fish", etc.). Of course, you could have abstract entities for each of these instead, but it's not clear how you would benefit from that either. It ultimately depends on how your application uses the model. Do you ever need to fetch all <code>Pet</code>s? Do you plan for the possibility to get only <code>Cat</code>s and <code>Fish</code> in a single fetch? Do you care about fetching data you won't immediately use?</p>

<p>Once you define the required classifications based on how you want to display/use the data, adapt the model to those classifications. Having a good looking, generic model, can often be a pain in the butt to use...</p>