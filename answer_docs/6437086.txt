<p>Normally, it would be considered a smell to have an object with no behaviour. The reason being that if it doesn't have any behaviour, then it isn't an object. When desiging your class you should be asking things like, "what is the class responsible for?". If it doesn't have any behaviour then this is a difficult questions to answer.</p>

<p>Rare exceptions to this being something like the Null Object pattern. </p>

<p><a href="http://en.wikipedia.org/wiki/Null_Object_pattern" rel="nofollow">http://en.wikipedia.org/wiki/Null_Object_pattern</a></p>

<p>I may be that the member of your class should actually be a member of another class. 
It may also be that your class has some functionality that you haven't discovered yet. 
It may also be that you are putting too much importance on the concept when a primitive type would do. </p>

<p>There are a number of techniques for designing OO systems, here is one of the original: 
<a href="http://en.wikipedia.org/wiki/Class-responsibility-collaboration_card" rel="nofollow">http://en.wikipedia.org/wiki/Class-responsibility-collaboration_card</a></p>