<p>For the general problem of adding arguments to one of multiple commands as an alias, the git alias works almost exactly like a normal *nix alias. The only difference it that unless the git alias starts with <code>!</code> it's assumed that <code>git</code> should be prepended to the command. Any arguments used in combination with an alias is prepended, to insert an argument into a loger string of commands you need some kind of shell command for parsing the arguments. See for instance <a href="https://stackoverflow.com/questions/941338/shell-script-how-to-pass-command-line-arguments-to-an-unix-alias">this question</a> for arguments.</p>

<p>But for this question in particular. I agree with the others that this is a useful thing to do. If you're going to push immediately after committing, I assume each user have their own public private repo (readonly for others) so that the push will "never" fail, which means it works very different from svn anyway; they must pull from different repos etc.</p>

<p>If you're instead are using one public "master repo" that everyone pulls and pushes to, this would be a even worse idea, since when the push inevitably will fail sometime, they are trained not to use "commit" then "push" but use your "ci" alias to commit and push changes; When they try to "re-commit" the changes the second part will not run because the first command does not finish with success status (but prints <code>no changes added to commit (use "git add" and/or "git commit -a")</code> instead).</p>