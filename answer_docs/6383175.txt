<p>In database theory, a key is a constraint that enforces uniqueness. A relvar (analogous to a SQL table) may indeed have more than one candidate key. A classic example is the set of chemical elements, for which name, symbol, atomic number and atomic weight are all keys (and folk will still want to add their own surrogate key to it ;)</p>

<p>MySQL continues a long tradition of abuse of the word <code>KEY</code> by making it a synonym for <code>INDEX</code>. Clearly, a MySQL table may have as many indexes as deemed necessary for performance for a given set of circumstances.</p>

<p>From your SQL DDL, it seems clear the ID is a surrogate key, so we must look for a natural key with not much to go on. While <code>transaction_id</code> may be a candidate, it is not inconceivable that an order can involve more than one transaction. In practical terms, I think an auditor would be suspicious of multiple orders made by the same user simultaneously, therefore suggest the compound of <code>user_id</code> and <code>payment_time</code> should be a key. However, if <code>transaction_id</code> is not a key then the table would not be fully normalized. Therefore, I'd give the designer the benefit of the doubt and assume <code>transaction_id</code> is also a key.</p>