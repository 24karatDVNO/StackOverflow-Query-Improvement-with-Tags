<p>Consider a context-free grammar that generates the language</p>

<pre><code>L1 = {a^nc^n : n &gt;= 0}
</code></pre>

<p>such as</p>

<pre><code>G1 = &lt;{S},{a,c},S,{S -&gt; aSc,S-&gt; λ}&gt;
</code></pre>

<p>Derivations in <code>G1</code> can be characterized as follows:</p>

<pre><code>G1 =&gt;1 S        (via S)
   =&gt;* a^nSc^n  (via n &gt;= 0 applications of S -&gt; aSc)
   =&gt;1 a^nc^n   (via S -&gt; λ)
</code></pre>

<p>The grammar <code>G1</code> establishes the required relationship between the number and placement of <code>a</code>'s and <code>c</code>'s in the language <code>L1</code>, then terminates with an application of the rule <code>S -&gt; λ</code>.</p>

<p>Consider how a derivation in <code>G1</code> is terminated by applying the rule <code>S -&gt; λ</code>, and how you might generate a sequence of <code>m &gt;= 0</code> <code>b</code>'s instead of the empty string. Here is a solution to the problem that is slightly more general. Suppose we have a language <code>L2</code> generated by the grammar</p>

<pre><code>G2 = &lt;V,N,S2,P&gt;
</code></pre>

<p>In order to generate strings in <code>L2</code> surrounded by an equal number of <code>a</code>'s and <code>c</code>'s, the rules of <code>G1</code> might be augmented as follows to obtain a grammar <code>G1'</code>:</p>

<pre><code>G1' = &lt;{S} ∪ V,{a,c} ∪ N,S,{S -&gt; aSc,S -&gt; S2} ∪ {P}&gt;
</code></pre>

<p>To solve your problem, let <code>L2</code> be the language <code>{b}*</code> and <code>G2</code> the regular grammar that generates it.</p>