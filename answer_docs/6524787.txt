<p>You did not define how these options should be passed in, but I think:</p>

<pre><code>if [ -z "$1" ]; then
   echo "Error"
   exit 1
fi
</code></pre>

<p>is what you are looking for.</p>

<p>However, if some of these options are, err, optional, then you might want something like:</p>

<pre><code>#!/bin/bash
USAGE="$0: [-a] [--alpha] [-b type] [--beta file] [-g|--gamma] args..."

ARGS=`POSIXLY_CORRECT=1 getopt -n "$0" -s bash -o ab:g -l alpha,beta:,gamma -- "$@"`
if [ $? -ne 0 ]
 then
  echo "$USAGE" &gt;&amp;2
  exit 1
 fi
eval set -- "$ARGS"
unset ARGS

while true
 do
  case "$1" in
   -a) echo "Option a"; shift;;
   --alpha) echo "Option alpha"; shift;;
   -b) echo "Option b, arg '$2'"; shift 2;;
   --beta) echo "Option beta, arg '$2'"; shift 2;;
   -g|--gamma) echo "Option g or gamma"; shift;;
   --) shift ; break ;;
    *) echo "Internal error!" ; exit 1 ;;
  esac
 done

echo Remaining args
for arg in "$@"
 do
  echo '--&gt; '"\`$arg'"
 done

exit 0
</code></pre>