<p>I have implemented the class from ConfigurationSection to get the file name and using XMLSerializer to Deserialize using the classes generated by XSD tool. Here is sample:</p>

<pre><code>namespace mycontrol
{
      public class ConfigurationSection : System.Configuration.ConfigurationSection
        {
           //Configuration is the type generated by XSD for my schema element Configuration

            private static Configuration _config; 

            /// &lt;summary&gt;
            /// static method to load config section and deserialize config
            /// &lt;/summary&gt;
            /// &lt;returns&gt;&lt;/returns&gt;
            private static Configuration GetConfig()
            {
                if (_config == null)
                {
                    ConfigurationSection configSection = (ConfigurationSection)ConfigurationManager.GetSection("SearchControlsConfig") as ConfigurationSection;
                    if (!string.IsNullOrEmpty(configSection.ExternalConfigSource))
                    {
                        string strFilePath = configSection.ExternalConfigSource;
                        if (!File.Exists(strFilePath))
                        {
                            strFilePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, strFilePath);
                            if (!File.Exists(strFilePath))
                                return null;
                        }

                        using (FileStream fs = new FileStream(strFilePath, FileMode.Open, FileAccess.Read))
                        {
                            XmlSerializer config = new XmlSerializer(typeof(Configuration));
                            _config = (Configuration)config.Deserialize(fs);
                        }
                    }

                }

                return _config;
            }


            /// &lt;summary&gt;
            /// Attribute to specify config source file in custom config section
            /// &lt;/summary&gt;
            [ConfigurationProperty("externalConfigSource", DefaultValue = "", IsRequired = false)]
            public string ExternalConfigSource
            {
                get
                {
                    return this["externalConfigSource"] as string;
                }
            }
        }
}
</code></pre>

<p>I cannot use the configSource attribute as my property while specifying the custom config, because it is reserved by ConfigurationManager.</p>