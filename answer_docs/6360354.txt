<p>I would say to use the cache.  As an enhancement on the other caching answers you could impliment some code to make it so that the cache would expire at the same time every day rather than just 24 hours after the first access of the day.  This protects against having erratic update times in a scenario where traffic is sporatic.  The first request after the cut off will look up the value and persist it until the next cutoff time.  But the cutoff stays constant regardless of when the first request occurs.</p>

<p>Something along the lines of this:</p>

<pre><code>    int ProgressValue
    {
        get
        {
            int? Value = Cache["ProgressValue"] as int?;
            if (Value == null)
            {
                //Set expiration time to 6 AM tomorrow.
                DateTime ExpTime = DateTime.Now.Date.AddDays(1).AddHours(6);
                Value = GetValueFromDB();
                Cache.Insert("ProgressValue", Value, null, ExpTime, System.Web.Caching.Cache.NoSlidingExpiration);
            }
            return (int)Value;
        }
    }
</code></pre>