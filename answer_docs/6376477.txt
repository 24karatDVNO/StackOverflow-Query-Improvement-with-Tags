<p>The code as presented doesn't really tell us anything about the booleans and their semantics.  Given two meaningless arbitrary independent booleans, the code as presented is fine.</p>

<p>But none of us uses meaningless arbitrary variables, or at least none of us should.  There's a reason a&amp;b leads to one code path, and a&amp;!b to another, etc.  What does it mean for a&amp;b to be true?  Name that.  Same with the rest of them.  Maybe it turns out that certain settings have related behavior, and you can rejigger the code to reflect that.</p>

<p>We can't really answer the question as presented, because of the lack of meaning of the variables presented.  When there's meaning, you can make meaningful choices.</p>