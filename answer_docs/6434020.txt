<p>There is a bug in the transitive dependencies management for the maven-bundle-plugin that <a href="http://mail-archives.apache.org/mod_mbox/felix-users/201006.mbox/%3C8BBDF0E69B21F949A579FCEDF131C1F8019FE2B1@MHA-TBEC1.mhmc00.com%3E" rel="nofollow">causes it to look up optional dependencies</a> (some of which may not exist).  I suspect this is what is happening when it tries to pull in hessian.</p>

<p>I'll second K. Claszen's idea of looking for versions of your bundles on springsource or fusesource, but if there are bundles you cannot find, the maven-bundle-plugin provides a <a href="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" rel="nofollow">bundleall goal (it's described in the goals section)</a>.  This goal will cause the bundle plugin to create bundles for all of the transitive dependencies of your application.  You can then use the ones you couldn't find in springsource/fusesource.  Once you've done this, you won't need to embed the jars into your bundle, which will make them available to other bundles as well.</p>

<p>One caveat that you may run into is the need to deploy the bundles such that no bundle is deployed before one of its dependencies.  In the past, I have used the Eclipse Virgo server to get around this.  It allows you to place all of your bundles in a repository and have the server determine the deployment order.</p>