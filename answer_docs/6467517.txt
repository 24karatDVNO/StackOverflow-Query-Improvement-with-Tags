<p>An alternative method would be to get the IDs into a list, de-dupe it, and then count the result.</p>

<pre><code>&lt;cfset idList = valueList(myquery.id) /&gt;
&lt;cfset dedupedIDlist = ListDeleteDuplicates(idList) /&gt;
&lt;cfset uniqueIDcount = listLen(dedupedIDlist) /&gt;
</code></pre>

<p><a href="http://cflib.org/udf/ListDeleteDuplicates" rel="nofollow">ListDeleteDuplicates()</a>:</p>

<pre><code>&lt;cfscript&gt;
/**
 * Case-sensitive function for removing duplicate entries in a list.
 * Based on dedupe by Raymond Camden
 * 
 * @param list      The list to be modified. (Required)
 * @return Returns a list. 
 * @author Jeff Howden (cflib@jeffhowden.com) 
 * @version 1, July 2, 2008 
 */
function ListDeleteDuplicates(list) {
  var i = 1;
  var delimiter = ',';
  var returnValue = '';
  if(ArrayLen(arguments) GTE 2)
    delimiter = arguments[2];
  list = ListToArray(list, delimiter);
  for(i = 1; i LTE ArrayLen(list); i = i + 1)
    if(NOT ListFind(returnValue, list[i], delimiter))
      returnValue = ListAppend(returnValue, list[i], delimiter);
  return returnValue;
}
&lt;/cfscript&gt;
</code></pre>

<p><a href="http://cflib.org/udf/ListRemoveDuplicates" rel="nofollow">ListRemoveDuplicates()</a> is another way to do the same thing, using the feature of structures that if you add a key to a struct that already exists it will just be overwritten.</p>