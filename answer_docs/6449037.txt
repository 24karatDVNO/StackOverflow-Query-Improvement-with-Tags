<p>This isn't really defensive programming. DP, as embodied especially in the classic 90s McConnell tome <em>Code Complete</em> is really about incrementally accumulating buttresses in the code that are informed by usage. So you start with some basic assertions and then as you see things getting through the screen, you add more.</p>

<p>Personally, I tend toward the Bertrand Meyer side of this spectrum: contracts. Whether you can really achieve the 'proof' levels he aspires to has been much debated, but his screeds against defensive programming are brilliant. The net net is any system that doesn't know how it can fail until a user has shown it is a work of madness. A component should do one thing only, and prescribe exactly what it needs to do it (in preconditions) and guarantee the result (post) given that nothing else goes sideways in the course of it (invariants).</p>