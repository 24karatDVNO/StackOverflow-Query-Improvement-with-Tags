<p><strong>Thanks Preli &amp; chrsmtclf.</strong>  Putting your solutions into Razor (C#) syntax for WebMatrix, I now have:</p>

<p><strong>(1) Preli's solution</strong>; and</p>

<pre><code>@{string westHand = "KQT5.KJ873..AJ52";
    var num = westHand.Length - 3;        
    char type = 'S'; //start with spades
    string[,] result = new string[num, 2];

    int counter = 0;
    foreach (string subString2 in westHand.Split('.'))
    {
        foreach (char card2 in subString2)
        {
             @: [@type, @card2]
            result[counter, 0] = type.ToString();
            result[counter, 1] = card2.ToString();
            counter++;
        }
        switch (type)
        {
            case 'S': type = 'H'; break;
            case 'H': type = 'D'; break;
            case 'D': type = 'C'; break;
        }
    }       
}
  &lt;br /&gt; You have @num cards. &lt;br /&gt;        
  @for(var i = 0; i &lt; num; i++)  
{ 
   @result[i,0] ; @result[i,1] ;&lt;br /&gt; 
}
</code></pre>

<p><strong>(2) chrsmtclf's solution</strong></p>

<pre><code>@{  char[] suits = { 'S', 'H', 'D', 'C' };
char[,] hand = new char[13, 2];
string westHand = "KQT5.KJ873..AJ52";
int currentSuit = 0; //Iterator for suits (0-4)
int currentCard = 0; //Current # of card from hand (0-12)
foreach (string suitString in westHand.Split('.')) {
    foreach (char cardChar in suitString){
        hand[currentCard, 0] = suits[currentSuit];
        hand[currentCard, 1] = cardChar;
        currentCard++;
    }
    currentSuit++;
}
}

@for(var i = 0; i &lt; 13; i++)  
{ 
  @hand[i,0] ; @hand[i,1] ;&lt;br /&gt; 
}
</code></pre>

<hr>

<p>Both the above solutions give the following output contained in a 2-D array:<br>
SK
SQ
ST
S5
HK
HJ
H8
H7
H3
CA
CJ
C5
C2</p>