<p>Nothing beats <a href="http://haskell.org" rel="nofollow">Haskell</a> for general-purpose mathematical programming. The wiki's quite extensive and the IRC channel (<code>#haskell</code> on Freenode) is great for asking questions. If you statically link your binaries on compilation, you should be able to run your programs on just about any system (with a few exceptions, e.g., <code>libgmp</code>).</p>

<p>Haskell code reads (roughly) like mathematical notation once you get the hang of it, so it can really help to tie things together for your students who are motivated to write their own programs. The purely functional style can be beneficial, as well, since it focuses less on I/O and the marshalling of data (perfectly useful in applications, perhaps less so in pure math), and more on the actual creation and refinement of functions and algorithms. You can even compose functions just as you would on paper.</p>

<p>If you want to get <em>really</em> serious, you could also look into Coq or Agda, but those might be a bit much for most classes.</p>

<p>For a Haskell program idea for an educator, check out <a href="http://blog.moertel.com/articles/2011/06/16/writing-a-simple-plagiarism-detector-in-haskell" rel="nofollow">this link</a>.</p>

<p>A nice list of arguments can also be found at:
<a href="http://blog.sigfpe.com/2006/01/eleven-reasons-to-use-haskell-as.html" rel="nofollow">Eleven Reasons to use Haskell as a Mathematician</a> and the book <a href="http://homepages.cwi.nl/~jve/HR/" rel="nofollow">The Haskell Road to Logic, Maths and Programming</a></p>