<p>It's a guess, based on two factors: the error is in DLL, and the error is in std::string destructor. That suggests to me that you have a string constructed outside the DLL and attempted to be destroyed inside DLL. Since DLL and application have their own copy of memory manager (unless you use custom allocators working across DLL boundary), any allocation in one and deallocation in another would likely cause a crash. One way to avoid it is to link RTL dynamically everywhere, so you have only one copy of memory manager, or create a custom allocator to avoid multiple memory managers (a lot more work).</p>