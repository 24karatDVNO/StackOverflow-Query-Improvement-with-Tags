<p>If Gson use is preferable or required, then specific to the question of how to generate JSON of the structure <code>{class:"A", x:1, y:2}</code> from a Java instance of the structure <code>class A {int x = 1; int y = 2;}</code>, it's currently necessary to implement custom serialization.  Similarly, to deserialize from this JSON to this Java structure, then it's necessary to implement custom deserialization.</p>

<p>Instead of such "manual" processing, note that Gson will soon have the <code>RuntimeTypeAdapter</code> available for simpler polymorphic deserialization. See <a href="http://code.google.com/p/google-gson/issues/detail?id=231" rel="nofollow">http://code.google.com/p/google-gson/issues/detail?id=231</a> for more info. Even if you cannot use the <code>RuntimeTypeAdapter</code>, it at least provides an example for creating a configurable custom deserializer.</p>

<p>If you can switch JSON mapping APIs, then I recommend considering <a href="http://jackson.codehaus.org" rel="nofollow">Jackson</a>, as it has a working and relatively simple polymorphic deserializer mechanism available. I posted some simple examples at <a href="http://programmerbruce.blogspot.com/2011/05/deserialize-json-with-jackson-into.html" rel="nofollow">http://programmerbruce.blogspot.com/2011/05/deserialize-json-with-jackson-into.html</a>.</p>