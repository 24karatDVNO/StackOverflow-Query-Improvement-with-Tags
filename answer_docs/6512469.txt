<p>I recently developed a very similar project. In my case there were several architectures available to me, one using COM+ and the other using p/Invoke.  I chose the p/Invoke method because due to simplicity. I had many people tell me outright that this was an incorrect approach, including Microsoft!  In the end, I was able to use p/Invoke architecture without a lot of headache, but getting there was not easy.  I was forced to address the differences between managed and unmanaged data structures, passing on the heap versus the stack, memory allocation, overwriting buffer/stack issues, ASP.Net security issues, and above all, the architectural differences between managed and unmanaged code. In the end the brain ache left me a much better programmer.</p>

<p>In answer to the question of can an unmanaged, cross language DLL be called re-entrantly from managed code using p/Invoke?  Yes it can. BUT; it must be architected to maintain its state in a reentrant manner.  This means that the unmanaged DLL must keep track of the memory it allocates, and release that memory each time itâ€™s called from your web service.  It must not release or allocate memory that belongs to another web service call.</p>