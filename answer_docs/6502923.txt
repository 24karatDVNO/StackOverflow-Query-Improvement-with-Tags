<p>You must signal the old thread to exit somehow. It is probably easiest to perform with locks - you create a lock when creating a new thread and acquire it. And you release it when the thread is no longer needed. The thread then only needs to check in the main loop whether its lock is still locked - if it isn't it will remove the label and exit. Here the modified version of your code (replace "Remove label here" comment by suitable code):</p>

<pre><code>import thread
from Tkinter import *
import random
import time
Admin=Tk()
lock = None
def moveit(number):
    global lock
    songas=Label(Admin,text=number,bg='red')
    def ji(lock):
        plad=0.0
        recount=0
        times=0
        while 1:
            plad-=0.1
            recount+=1
            times+=1
            time.sleep(0.5)
            pls=0.0
            pls+=plad


            if recount==4:

                pls=0
                plad=0.0
                recount=0

            songas.place(relx=pls,rely=0.7)

            if not lock.locked():
                # Remove label here
                break

    if lock:
        # Signal old thread to exit
        lock.release()
    lock = thread.allocate_lock()
    lock.acquire()
    thread.start_new_thread(ji,(lock,))

za=random.random()

button=Button(Admin,text='Press',command=lambda:moveit(str(za)))
button.place(relx=0.2)
Admin.mainloop()
</code></pre>