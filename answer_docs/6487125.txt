<p><code>P1</code> and <code>P2</code> both are pointing to one object of type <code>Inner</code>... 
That's why values are the same...</p>

<pre><code>
struct Outer
{
   public Inner inner;
   public Outer(int data) { this.inner = new Inner(data); }

   public Clone() { return new Outer(this.inner.data); }
}
</code></pre>

<p>now try using the code like so:</p>

<pre><code>
...
 p2 = p1.Clone();
</code></pre>