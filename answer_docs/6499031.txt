<p>To my knowledge there is no way to have a resource file split over several files so that you can access the entries from several resx-files via one common accessor, like <code>Resources.MyAggregatedResources.Resource1</code>.
You are surely aware of the fact that you can put as many resource files into you <code>App_GlobalResources</code> folder as you wish and access them all as <code>Resources.ResourceFile1.Resource1</code>, <code>Resources.ResourceFile2.Resource1</code>.</p>

<p>All resources that are added to resx-files are automatically mapped to strongly typed properties in the code-behind files with the name <code>resource.Designer.cs</code> (If you don't see this file, toggle "Show all files" option in the Solution Explorer (second button)). The "mapping" is implemented as code generation within Visual Studio and thus cannot be altered from your project. You need to implement your own abstraction layer above resources to return the values from several resource files and pass the name of the resource as string => no way to check for misspellings or missing resources in design-time and no IntelliSense.</p>

<p>One way to implement the functionality you want is to upgrade your solution to .Net 4.0 and to use the <code>dynamic</code> properties that are resolved to run-time. You won't get any IntelliSense support for you resource names, however, as in case of static resources...</p>