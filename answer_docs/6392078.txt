<p>I'm not sure I understand the problem correctly but you could probably make use of the null-coalescing operator:</p>

<pre><code>public class A {
    public string Prop1 {get;set;}
    public int? Prop2 {get;set;}

    public static A Merge(A a, A b) {

        var res = new A();

        //res.Prop = b.Prop unless b.Prop is null, in which case res.Porp = a.Prop
        res.Prop1 = b.Prop1 ?? a.Prop1;
        res.Prop2 = b.Prop2 ?? a.Prop2;

        return res;
    }
}


var a = new A() {Prop1 = "A", Prop2 = 1};
var b = new A() {Prop1 = "B"};
var c = A.Merge(a,b);
</code></pre>

<p>This way, only the properties that were set in B get copied over to the new class, otherwise the properties from a are the ones chosen.</p>