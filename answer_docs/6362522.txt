<p>Just right-click your project in Visual Studio, choose Project Properties -> Resources -> Add Resource -> Add Existing Fileâ€¦
And include the code below to your App.xaml.cs or equivalent.</p>

<pre><code>public App()
{
    AppDomain.CurrentDomain.AssemblyResolve +=new ResolveEventHandler(CurrentDomain_AssemblyResolve);
}

System.Reflection.Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
{
    string dllName = args.Name.Contains(',') ? args.Name.Substring(0, args.Name.IndexOf(',')) : args.Name.Replace(".dll","");

    dllName = dllName.Replace(".", "_");

    if (dllName.EndsWith("_resources")) return null;

    System.Resources.ResourceManager rm = new System.Resources.ResourceManager(GetType().Namespace + ".Properties.Resources", System.Reflection.Assembly.GetExecutingAssembly());

    byte[] bytes = (byte[])rm.GetObject(dllName);

    return System.Reflection.Assembly.Load(bytes);
}
</code></pre>

<p>Here's my original blog post:
<a href="http://codeblog.larsholm.net/2011/06/embed-dlls-easily-in-a-net-assembly/" rel="nofollow">http://codeblog.larsholm.net/2011/06/embed-dlls-easily-in-a-net-assembly/</a></p>