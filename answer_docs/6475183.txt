<p>PostgreSQL coordinates multiple statements executing at the same time using an approach named <a href="http://www.postgresql.org/docs/current/static/mvcc.html" rel="nofollow">MVCC</a>.  For the most common cases, multiple readers or writers co-exist without any interference with one another.  It is possible that two sessions doing a mix of read and write operations can get in each other's way.  For example, a second session trying to UPDATE a row already UPDATEd by a still executing transaction will block waiting for the first session to either commit or abort.</p>

<p>There are some other situations where two sessions doing something similar will interact, but these are done to improve performance.  For example, if one session is doing a giant sequential scan query of an entire table, and then a second session starts to do the same thing, the second one will join in to share the work being done by the first one.  This is all transparent to you, but can dramatically speed up how fast each query finishes.</p>

<p>The main thing to be concerned about when having multiple connections going at once is when you start doing UPDATE and DELETE statements that take locks on items in the database.  These can easily interfere with one another, and what happens is that the second statement will often end up waiting for the first to finish before it proceeds.  This is also covered in the documentation chapter I mentioned already.</p>