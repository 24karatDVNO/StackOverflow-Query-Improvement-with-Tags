<p>This solution uses <a href="http://msdn.microsoft.com/en-us/library/ms190766.aspx" rel="nofollow" title="Using Common Table Expressions">CTEs</a>, <a href="http://msdn.microsoft.com/en-us/library/ms186243.aspx" rel="nofollow" title="Recursive Queries Using Common Table Expressions">recursion</a>, and <a href="http://msdn.microsoft.com/en-us/library/ms189798.aspx" rel="nofollow" title="Ranking Functions (Transact-SQL)">ranking</a> to obtain cumulative totals for every <code>fin_month</code> per <code>SalesPerson</code> in every <code>Department</code> based on the corresponding monthly totals.</p>

<pre><code>;WITH
  monthlytotals AS (
    SELECT
      Department,
      SalesPerson,
      fin_month,
      MonthlyTotal = SUM(cost),
      rn = ROW_NUMBER() OVER (PARTITION BY Department, SalesPerson
                                  ORDER BY fin_month)
    FROM atable
    GROUP BY Department, SalesPerson, fin_month
  ),
  alltotals AS (
    SELECT
      Department,
      SalesPerson,
      fin_month,
      MonthlyTotal,
      CumulativeTotal = MonthlyTotal,
      rn
    FROM monthlytotals
    WHERE rn = 1
    UNION ALL
    SELECT
      m.Department,
      m.SalesPerson,
      m.fin_month,
      m.MonthlyTotal,
      CumulativeTotal = a.CumulativeTotals + m.MonthlyTotal,
      m.rn
    FROM monthlytotals m
      INNER JOIN alltotals a
         ON m.Department = a.Department
        AND m.SalesPerson = a.SalesPerson
        AND m.rn = a.rn + 1
  )
SELECT
  Department,
  SalesPerson,
  fin_month,
  MonthlyTotal,
  CumulativeTotal
FROM alltotals
</code></pre>