<p>I think that things have changed, regarding UML's usefulness to melculetz.</p>

<ol>
<li><p>In Visual Studio 2010, I can define an association relationship, that will generate composite classes.  I can specify the multiplicity and class qualifiers.  I can also generate classes from the model.<br>
Presently, I am attempting to visually model the phases of a system, in order to visually define the methods for a state-machine object.  That is my attempt to integrate structure and behaviour.  Check my blog to see how I get on.
Class Analyser visually expresses the behaviour of class objects.  Limitation removed.</p></li>
<li><p>I think that the answer is to turn your development methods towards MDA.  You will generate more classes, but the payoff is in terms of manageability and re-use (where you template your efforts).</p></li>
<li><p>I am still working through my model but, I find VS2010 promises good tools for managing the development process.  I have yet to investigate UI modelling, but have heard the rumours.  I may have it all wrong but I think that, by working with Lightswitch, I may be able to model the UI also.</p></li>
</ol>