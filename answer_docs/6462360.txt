<p>I have a situation where the following code works well for me.  The code makes use of the replace function and SQL 2008's ability to insert multiple rows with a single insert statement.  The only drawback to this method, if it is really a drawback, is it is limited to 1000 splits.</p>

<pre><code>    IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[StringSegmenter]') AND type in (N'U'))
DROP TABLE [dbo].[StringSegmenter]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[StringSegmenter]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[StringSegmenter](
    [ss_id] [int] IDENTITY(1,1) NOT NULL,
    [ss_segment] [varchar](max) NOT NULL,
 CONSTRAINT [PK_StringSegmenter] PRIMARY KEY CLUSTERED 
(
    [ss_id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO

SET ANSI_PADDING OFF
GO

truncate table scratchpad.dbo.stringsegmenter
declare @String varchar(max)
declare @Splitter varchar(10)
set @String
set @Splitter = ','
set @String = 'Insert [dbo].[StringSegmenter] Values (''' + replace(@string, @splitter,'''),(''') + ''')'
select @String
execute (@String)

Select * from [dbo].[StringSegmenter] order by ss_id
</code></pre>