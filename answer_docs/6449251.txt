<p>I think the best thing to keep in mind is being pragmatic. Does the extra work of the code reshuffle outweigh the benefits? To me it sounds like a significant architectural change, and the current model seems to be pretty okay already.</p>

<p>For one of my own projects I've also decided not to go for the architectural change, just because it we would lose trust in the system. Sometimes it's better to <em>know</em> what does not work well, instead of having a lot of confusion by <em>guessing</em> how to do it right.</p>