<p>I'm sure somebody can give you a more exact answer but reading your question and applying my self-taught knowledge:</p>

<ul>
<li><p>The simple technical definition of Web Services according to W3C: </p>

<p>A Web service is a software system designed to support interoperable machine-to-machine interaction over a network. </p>

<p><a href="http://www.w3.org/TR/2004/NOTE-ws-gloss-20040211/" rel="nofollow">http://www.w3.org/TR/2004/NOTE-ws-gloss-20040211/</a></p>

<p>I like to think of web services as the interactive elements of a site that its customer base utilizes.  For example, Twitter's web services include: tweeting, messages, hashtags, etc.  <strong>Web services are what users get to DO or DATA passed back and forth.</strong></p></li>
<li><p>A public web API provides means for developers to utilize the web services on their own site.  For example, Twitter's API allows example.com site to utilize tweeting, messaging, hashtags, etc from within their own domain.  <strong>An API is how developers get external access to web services to make apps using those services.</strong></p></li>
<li><p>I have no idea about this question.  I wouldn't do that.  I would use the methods the public API exposes access to.  But, I've never written my own API, let alone on the scale of Twitter or foursquare.  </p></li>
</ul>

<p>I hope this helps.</p>