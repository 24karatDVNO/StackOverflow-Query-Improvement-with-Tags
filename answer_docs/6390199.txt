<p>You can make a commutative encryption algorithm, but the encryption methods must then be limited to <a href="http://en.wikipedia.org/wiki/Commutative_property#Commutative_operations_in_mathematics" rel="nofollow">commutative operations</a>.  This will limit the strength of the encryption function because it greatly reduces the possible encryption methods that can be used.  Thus, if a hacker wanted to break your algorithm and new it was commutative, it would greatly improve his chances of breaking it because of the reduction in decryption methods he would need to try.  However, it might be okay for your purposes, depending on how much hacking you expect.</p>

<p>Also, I'm not sure if "secret splitting" is what you are going for, as mentioned by atk.  I've looked at it briefly, but from what I've seen (at least for the basic case) you can't perform the operations separately, as both keys need to be provided together to perform the encrypt/decrypt actions.  In other words you can't call encrypt with one person's key to get a result that you can call encrypt on with a second key.  However, if you have both keys available at once, this might be a good method to try.</p>