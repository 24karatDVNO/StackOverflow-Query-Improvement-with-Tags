<p>You will need to use the URLConnection to download:</p>

<pre><code>public void DownloadFromUrl(String imageURL, String fileName) {  //this is the downloader method
        try {
                URL url = new URL("http://yoursite.com/&amp;quot; + imageURL); //you can write here any link
                File file = new File(fileName);

                long startTime = System.currentTimeMillis();
                Log.d("ImageManager", "download begining");
                Log.d("ImageManager", "download url:" + url);
                Log.d("ImageManager", "downloaded file name:" + fileName);
                /* Open a connection to that URL. */
                URLConnection ucon = url.openConnection();

                /*
                 * Define InputStreams to read from the URLConnection.
                 */
                InputStream is = ucon.getInputStream();
                BufferedInputStream bis = new BufferedInputStream(is);

                /*
                 * Read bytes to the Buffer until there is nothing more to read(-1).
                 */
                ByteArrayBuffer baf = new ByteArrayBuffer(50);
                int current = 0;
                while ((current = bis.read()) != -1) {
                        baf.append((byte) current);
                }

                /* Convert the Bytes read to a String. */
                FileOutputStream fos = new FileOutputStream(file);
                fos.write(baf.toByteArray());
                fos.close();
                Log.d("ImageManager", "download ready in"
                                + ((System.currentTimeMillis() - startTime) / 1000)
                                + " sec");

        } catch (IOException e) {
                Log.d("ImageManager", "Error: " + e);
        }

}
</code></pre>

<p><a href="http://www.helloandroid.com/tutorials/how-download-fileimage-url-your-device" rel="nofollow">http://www.helloandroid.com/tutorials/how-download-fileimage-url-your-device</a></p>

<p>IBM has some help on this, basically the file will be saved to the an InputStream, which you can work with it from there or save it to a file.</p>

<p><a href="http://www.ibm.com/developerworks/opensource/library/x-android/" rel="nofollow">http://www.ibm.com/developerworks/opensource/library/x-android/</a></p>