<p>1) I guess, you can choose the default behavior by implementing your own <code>AuthenticationSuccessHandler</code> and passing it to <code>&lt;form-login authentication-success-handler-ref="..."/&gt;</code></p>

<p>2) This is actually not in the vein of the separation of concerns paradigm in Spring Security where the authentication provider populates the <code>Authentication</code> object and another filter persists/populate the authentication in/from the HTTP session. Nevertheless, you can in general have access to the current HTTP request and, therefore a session, from anywhere inside the request processing chain by adding the filter <code>org.springframework.web.context.request.RequestContextListener</code> to your <code>web.xml</code>. Use then <code>((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest().getSession()</code> to reach the session from your authentication provider.</p>