<p>If you want to know what's in a header file, try looking at it, seriously: most will start with some comment describing the content if it's not obvious anyway.</p>

<p>If you want to know what part of a header file is being used by the program that's including, try removing it and looking at the error messages.  That may also sound glib, but sadly there's generally not a better way to find this out.  But, it may be that on one platform some functionality requires including two headers, whereas on some other platform only one of them is required (perhaps because the second header is indirectly picked up by some earlier include anyway): if you test on the platform where one header is needed and decide to remove the second include, you may break the build on the other platform.  So, when you find stuff that is needed, consult the man pages for the required headers - they may be specified by some Standard that both platforms honour.</p>

<p>If you want to know which header files to use yourself, then again - you have to look at the documentation for the functions you need to call.  Even then, as a C++ programmer you should prefer the C++ versions of certain C headers, and standard documentation tools like <code>man</code> - given the C function name - won't tell you about the C++ headers.  Have a read of e.g. <a href="http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt01ch03s02.html" rel="nofollow">http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt01ch03s02.html</a> - it's GCC documentation but describes C++ Standard requirements for these headers.</p>