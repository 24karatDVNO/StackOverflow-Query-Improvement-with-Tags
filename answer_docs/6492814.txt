<p>Well according to the code automatically generated by SWIG for function that allocate a new object, the proper way should be to just set the Python Ownership flag to one, which means : <strong>python owns this pointer</strong><br>
This make sense : where else could your <code>new Foo()</code> be deallocated ? The Swig wrapper object will handle it. </p>

<pre><code>PyObject* FindBestMatch(const Bar&amp; fp) {
    Foo* ptr(new Foo());
    float match;

    // call a function to fill the foo pointer

    PyObject* o = SWIG_NewPointerObj(ptr,
                   SWIGTYPE_p_Foo,
                   SWIG_BUILTIN_INIT |  0);

    PyObject* result = Py_BuildValue("(fO)", match, o);
    return result;
}
</code></pre>

<p>However I don't see why you would decrease the reference count on o : if I recall correctly when passing an object to a tuple or list the reference is stolen.</p>