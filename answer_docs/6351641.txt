<p>I've always preferred joins to sub-queries that use <code>IN()</code>: </p>

<p><a href="http://dev.mysql.com/doc/refman/5.5/en/rewriting-subqueries.html" rel="nofollow">http://dev.mysql.com/doc/refman/5.5/en/rewriting-subqueries.html</a></p>

<blockquote>
  <p>Sometimes there are other ways to test
  membership in a set of values than by
  using a subquery. Also, on some
  occasions, it is not only possible to
  rewrite a query without a subquery,
  but it can be more efficient to make
  use of some of these techniques rather
  than to use subqueries. One of these
  is the IN() construct.</p>
</blockquote>

<p>...</p>

<blockquote>
  <p>A <code>LEFT [OUTER] JOIN</code> can be faster than
  an equivalent subquery because the
  server might be able to optimize it
  betterâ€”a fact that is not specific to
  MySQL Server alone. Prior to SQL-92,
  outer joins did not exist, so
  subqueries were the only way to do
  certain things. Today, MySQL Server
  and many other modern database systems
  offer a wide range of outer join
  types.</p>
</blockquote>

<p>Here's how to answer your question with <code>LEFT OUTER JOIN</code>:</p>

<pre><code>DELETE FROM table1
LEFT OUTER JOIN child_table_1 c1 ON table1.id = c1.table_1_id
LEFT OUTER JOIN child_table_2 c2 ON table1.id = c2.table_1_id
-- More joins for additional child tables here
WHERE c1.table_1_id IS NULL  
AND   c2.table_1_id IS NULL
-- AND other child tables
; 
</code></pre>